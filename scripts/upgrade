#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_script_progression --message="Upgrading dependencies..." --weight=10

ynh_exec_warn_less ynh_install_nodejs --nodejs_version=$nodejs_version

ynh_use_nodejs

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Stopping a systemd service..." --weight=1

ynh_systemd_action --service_name=$app --action="stop" --log_path="/var/log/$app/$app.log"

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression --message="Ensuring downward compatibility..." --weight=3

# If data_dir doesn't exist, create it
if [ -z $data_dir ]; then
	data_dir=/home/yunohost.app/$app

	mkdir -p $data_dir
	rsync -arz "$install_dir/config/" "$data_dir/config/" --delete-after --remove-source-files
	rsync -arz "$install_dir/audiobooks/" "$data_dir/audiobooks/" --delete-after --remove-source-files
	rsync -arz "$install_dir/metadata/" "$data_dir/metadata/" --delete-after --remove-source-files

	chmod 750 "$data_dir"
	chmod -R o-rwx "$data_dir"
	chown -R $app:$app "$data_dir"
fi

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Upgrading source files..." --weight=3

# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source --dest_dir="$install_dir" --keep=".env"
ynh_setup_source --dest_dir="$install_dir" --source_id="tone"

chmod 750 "$install_dir"
chmod -R o-rwx "$install_dir"
chown -R $app:www-data "$install_dir"

#=================================================
# SPECIFIC UPGRADE
#=================================================
# UPGRADE APP
#=================================================
ynh_script_progression --message="Upgrading app..." --weight=10

pushd $install_dir/client
	ynh_exec_warn_less ynh_exec_as $app env $ynh_node_load_PATH $ynh_npm ci
	ynh_exec_warn_less ynh_exec_as $app env $ynh_node_load_PATH $ynh_npm cache clean --force
	ynh_exec_warn_less ynh_exec_as $app env $ynh_node_load_PATH $ynh_npm run generate
popd

pushd $install_dir
	ynh_exec_warn_less ynh_exec_as $app env $ynh_node_load_PATH $ynh_npm ci --only=production
popd

#=================================================
# UPDATE A CONFIG FILE
#=================================================
ynh_script_progression --message="Updating a configuration file..." --weight=1

ynh_add_config --template=".env" --destination="$install_dir/.env"

chmod 400 "$install_dir/.env"
chown $app:$app "$install_dir/.env"

#=================================================
# UPDATE A CONFIG FILE
#=================================================
ynh_script_progression --message="Updating $app's configuration files..." --weight=1

# Create a dedicated NGINX config
ynh_add_nginx_config

# Create a dedicated systemd config
ynh_add_systemd_config

# Use logrotate to manage app-specific logfile(s)
ynh_use_logrotate --non-append

yunohost service add $app --description="Audiobook server" --log="/var/log/$app/$app.log"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..." --weight=3

ynh_systemd_action --service_name=$app --action="start" --log_path="/var/log/$app/$app.log" --line_match="Listening on"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Upgrade of $app completed" --last
